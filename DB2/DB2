-- ENUM 타입 정의
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'data_type') THEN
        CREATE TYPE data_type AS ENUM ('sensor_csv', 'image');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'label_type_enum') THEN
        CREATE TYPE label_type_enum AS ENUM ('binary', 'bbox', 'mask');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'user_role_enum') THEN
        CREATE TYPE user_role_enum AS ENUM ('admin', 'worker');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'sensor_task_type_enum') THEN
        CREATE TYPE sensor_task_type_enum AS ENUM (
            'binary_classification',
            'multi_label',
            'binary_and_multi_label'
        );
    END IF;
END $$;

-- 기업 & 사용자
CREATE TABLE companies (
    company_id UUID PRIMARY KEY,
    company_name VARCHAR NOT NULL,
    address TEXT,
    industry VARCHAR,
    process VARCHAR
);

CREATE TABLE users (
    user_id UUID PRIMARY KEY,
    company_id UUID REFERENCES companies(company_id),
    username VARCHAR NOT NULL,
    password_hash VARCHAR NOT NULL,
    department VARCHAR,
    role user_role_enum,
    login_id VARCHAR UNIQUE,
    is_approved BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT now()
);

-- 업로드 정보
CREATE TABLE uploads (
    upload_id SERIAL PRIMARY KEY,
    company_id UUID REFERENCES companies(company_id),
    uploader_id UUID REFERENCES users(user_id),
    file_key TEXT NOT NULL,                          -- s3에 있는 폴더 경로 예: uploads/batch_29/
    file_type data_type NOT NULL,                    -- image or sensor_csv
    has_target BOOLEAN DEFAULT FALSE,
    label_type label_type_enum,                      -- 이비지 
    task_type sensor_task_type_enum,                 -- 센서
    created_at TIMESTAMP DEFAULT now()
);

-- 센서 데이터 및 타겟
CREATE TABLE input_sensor_data (
    id SERIAL PRIMARY KEY,
    upload_id INT REFERENCES uploads(upload_id),
    timestamp TIMESTAMP,
    features JSONB,
    created_at TIMESTAMP DEFAULT now()
);

CREATE TABLE input_target (
    id SERIAL PRIMARY KEY,
    upload_id INT REFERENCES uploads(upload_id),
    machine_failure BOOLEAN,
    failure_modes JSONB,
    created_at TIMESTAMP DEFAULT now()
);

-- 이미지 데이터
CREATE TABLE input_image (
    id SERIAL PRIMARY KEY,
    upload_id INT REFERENCES uploads(upload_id),
    image_path TEXT,
    width INT,
    height INT,
    format VARCHAR,
    is_defect BOOLEAN,
    created_at TIMESTAMP DEFAULT now()
);

-- 센서 예측 결과
CREATE TABLE prediction_result_sensor (
    id SERIAL PRIMARY KEY,
    upload_id INT NOT NULL REFERENCES uploads(upload_id),
    model_id INT REFERENCES model_registry(id),
    timestamp TIMESTAMP,
    predicted_failure BOOLEAN,
    predicted_modes JSONB,
    shap_summary JSONB,
    created_at TIMESTAMP DEFAULT now(),
    tested_at TIMESTAMP
);

-- 이미지 예측 결과
CREATE TABLE prediction_result_image (
    image_id INT PRIMARY KEY REFERENCES input_image(id),
    upload_id INT NOT NULL REFERENCES uploads(upload_id),
    model_id INT REFERENCES model_registry(id),
    gradcam_path TEXT NOT NULL,
    is_defect BOOLEAN NOT NULL,
    defect_probability FLOAT,
    created_at TIMESTAMP DEFAULT now(),
    tested_at TIMESTAMP
);

-- 모델 레지스트리 (활성 모델 관리 포함)
CREATE TABLE model_registry (
    id SERIAL PRIMARY KEY,
    model_name VARCHAR NOT NULL,
    version VARCHAR NOT NULL,
    mlflow_run_id VARCHAR NOT NULL,
    trained_on_upload_id INT REFERENCES uploads(upload_id),
    company_id UUID REFERENCES companies(company_id),
    process_type VARCHAR NOT NULL CHECK (process_type IN ('image', 'sensor_csv')),
    accuracy FLOAT,
    f1_score FLOAT,
    auc_score FLOAT,
    is_active BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT now()
);

-- 인덱스 최적화
CREATE INDEX idx_uploads_company ON uploads(company_id);
CREATE INDEX idx_sensor_upload ON input_sensor_data(upload_id);
CREATE INDEX idx_image_upload ON input_image(upload_id);
CREATE INDEX idx_target_upload ON input_target(upload_id);
CREATE INDEX idx_model_company ON model_registry(company_id);
CREATE INDEX idx_model_process_active ON model_registry(process_type, is_active);

-- 테스트 데이터 삽입
INSERT INTO companies (company_id, company_name)
VALUES ('11111111-1111-1111-1111-111111111111', 'Test Company')
ON CONFLICT DO NOTHING;

INSERT INTO users (
    user_id, company_id, username, password_hash,
    department, role, is_approved, login_id
) VALUES (
    '22222222-2222-2222-2222-222222222222',
    '11111111-1111-1111-1111-111111111111',
    'test_user',
    'hashedpassword123',
    'AI Team',
    'worker',
    TRUE,
    'test_user_01'
);
